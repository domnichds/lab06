name: Release

on:
  push:
    tags:
      - '*'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up CMake
        uses: lukka/get-cmake@latest

      - name: Install dependencies (Linux)
        if: runner.os == 'Linux'
        run: sudo apt-get update && sudo apt-get install -y rpm

      - name: Configure
        run: cmake -S . -B _build

      - name: Build
        run: cmake --build _build --config Release

      - name: Package (Linux)
        if: runner.os == 'Linux'
        run: |
          cmake --build _build --target package
          ls -lh _build

      - name: Package (macOS)
        if: runner.os == 'macOS'
        run: |
          cmake --build _build --target package
          ls -lh _build

      - name: Package (Windows)
        if: runner.os == 'Windows'
        run: |
          cmake --build _build --target package
          ls -lh _build

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: solver-${{ runner.os }}
          path: |
            _build/*.tar.gz
            _build/*.zip
            _build/*.deb
            _build/*.rpm
            _build/*.msi
            _build/*.dmg

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            artifacts/**/*.tar.gz
            artifacts/**/*.zip
            artifacts/**/*.deb
            artifacts/**/*.rpm
            artifacts/**/*.msi
            artifacts/**/*.dmg
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 